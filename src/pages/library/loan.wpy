<style lang="less">
  page {
    background: #eee;
    width: 100%;
    height: 100%;
  }
  @import url("../../less/config");
  .book {
    color: #333;
    margin: 0.5rem 0.5rem 0rem 0.5rem;
    background: @white;
    border-radius: 0.1rem;
    padding: 0.5rem;
    display: flex;
    align-content: space-between;
    flex-wrap: wrap;
    >view {
      width: 100%;
    }
    .info {
      margin-top: 1rem;
      justify-content: space-between;
      align-items: center;
      display: flex;
      color: #666;
      font-size: 0.8rem;
    }
    .warn {
      color: @base-color;
    }
  }
  .none {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    color: #888;
    font-size: 2rem;
    text-align: center;
  }
</style>

<template>
  <view wx:if="{{loan_books.length!=0}}">
    <block wx:for="{{loan_books}}" wx:key="{{index}}">
      <view class="book">
        <view class="title">{{item.title}}-{{item.author}}</view>
        <view class="info">
          <view>到期: {{item.due_date}}</view>
          <view wx:if="{{item.arrearage>0}}" class="warn">欠费: {{item.arrearage}}</view>
          <view wx:if="{{loan_type=='now'}}" class="btn warn" @tap="loan({{item.book_id}})">续借</view>
          <view wx:if="{{loan_type=='history'}}">归还: {{item.return_date}}</view>
        </view>
      </view>
    </block>
  </view>
  <view wx:else class="none">
    暂无借阅，下拉刷新
  </view>
</template>

<script>
  import wepy from "wepy";
  import http from "../../util/http";
  import Verify from "../../mixins/verify"
  export default class Loan extends wepy.page {
    config = {
      navigationBarTitleText: "我的借阅",
      enablePullDownRefresh: true
    };
    mixins = [Verify]
    data = {
      loan_books: [],
      loan_type: "now" // history
    };
    methods = {
      loan(book_id) {
        let self = this;
        if (this.verify()) {
          http.post({
            url: "/library/loan",
            params: {
              book_id: book_id
            }
          }).then(resp => {
            if (resp.status == 0) {
              self.getBooks()
              wepy.showModal({
                title: "续借成功",
                content: resp.msg,
                showCancel: false
              });
            } else {
              if (resp.data === 0) {
                wepy.setStorageSync("library_verify", 0)
                self.verifyBind()
              } else {
                wepy.showModal({
                  title: "提示",
                  content: resp.msg,
                  showCancel: false
                });
              }
            }
          });
        }
      }
    };
    getBooks() {
      let self = this;
      if (this.verify()) {
        const t = this.loan_type == "now" ? 0 : 1;
        http.get("/library/books?is_history=" + t).then(resp => {
          if (resp.status == 0) {
            self.loan_books = resp.data;
            self.$apply();
            wepy.setStorage({
              key: "loan_" + this.loan_type,
              data: resp.data
            });
          } else {
            if (resp.data === 0) {
              wepy.setStorageSync("library_verify", 0)
              self.verifyBind()
            } else {
              wepy.showModal({
                title: "获取数据失败",
                content: resp.msg,
                showCancel: false
              });
            }
          }
        });
      }
    }
    onPullDownRefresh() {
      this.getBooks()
    }
    onLoad(options) {
      if (options.type && options.type == "history") {
        this.loan_type = options.type;
        wepy.setNavigationBarTitle({
          title: "历史借阅"
        })
      }
      this.loan_books = wepy.getStorageSync("loan_" + this.loan_type);
      if (this.loan_books.length == 0) {
        this.getBooks();
      }
    }
  }
</script>
