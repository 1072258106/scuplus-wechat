<style lang="less">
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
</style>

<script>
  import wepy from "wepy";
  import "wepy-async-function";
  import http from "./util/http";
  export default class extends wepy.app {
    config = {
      pages: [
        "pages/index",
        "pages/details",
        "pages/newsLists",
        "pages/grade",
        "pages/schedule",
        "pages/bindJwc"
      ],
      window: {
        backgroundTextStyle: "light",
        navigationBarBackgroundColor: "#fff",
        navigationBarTitleText: "WeChat",
        navigationBarTextStyle: "black"
      },
      tabBar: {
        list: [{
            pagePath: "pages/index",
            text: "首页"
          },
          {
            pagePath: "pages/newsLists",
            text: "资讯"
          }
        ]
      }
    };
    globalData = {
      userInfo: null,
      token: "",
      jwc_verify: 0
    };
    constructor() {
      super();
      this.use("requestfix");
    }
    onLaunch() {
      this.testAsync();
      this.getToken();
    }
    sleep(s) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve("promise resolved");
        }, s * 1000);
      });
    }
    async testAsync() {
      const data = await this.sleep(3);
      console.log(data);
    }
    getUserInfo(cb) {
      const that = this;
      if (this.globalData.userInfo) {
        return this.globalData.userInfo;
      }
      wepy.getUserInfo({
        success(res) {
          that.globalData.userInfo = res.userInfo;
          cb && cb(res.userInfo);
        }
      });
    }
    login() {
      wepy.login({
        success: function(res) {
          if (res.code) {
            http.post({
              url: "/login",
              params: {
                code: res.code
              }
            }).then(res => {
              if (res.status == 0) {
                let data = res.data;
                wepy.setStorage({
                  key: "token",
                  data: data.token
                });
                wepy.setStorage({
                  key: "jwc_verify",
                  data: data.jwc_verify
                });
                this.globalData.token = data.token;
                this.globalData.jwc_verify = data.jwc_verify;
                if (data.jwc_verify == 0) {
                  wepy.navigateTo({
                    url: "bindJwc"
                  });
                }
              } else {
                wepy.showToast({
                  title: "用户登录失败！",
                  icon: "loading",
                  duration: 2000
                });
              }
            });
          } else {
            wepy.showToast({
              title: "获取用户登录态失败！",
              icon: "error",
              duration: 2000
            });
            console.log("获取用户登录态失败！" + res.errMsg);
          }
        }
      });
    }
    getToken() {
      let token = wepy.getStorageSync("token");
      let jwc_verify = wepy.getStorageSync("jwc_verify");
      let _this = this;
      if (!token) {
        this.login();
      } else {
        wepy.checkSession({
          success: function() {
            _this.globalData.token = token;
            _this.globalData.jwc_verify = jwc_verify;
            if (jwc_verify == 0) {
              wepy.navigateTo({
                url: "bindJwc"
              });
            }
          },
          fail: function() {
            _this.login();
          }
        });
      }
    }
  }
</script>
