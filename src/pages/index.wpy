<style lang="less">
  @import "./src/icon/iconfont.less";
  page {
    background: #eee;
  }
  .func {
    background: #fff; // margin: 0.5rem;    
    .func-row {
      display: flex;
      justify-content: space-around;
      flex-wrap: wrap;
    }
  }
  .mview {
    padding-top: 0.7rem;
    width: 25%;
    border-bottom: 1px solid #eee;
  }
  .icon-btn {
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    align-content: space-between;
    flex-wrap: wrap; // width: 25%;
    .iconfont {
      @size: 2.7rem;
      width: @size;
      border-radius: @size*0.5;
      height: @size;
      display: flex;
      justify-content: center;
      align-items: center;
      background: #99ccee;
      color: #fff;
      font-size: 1.2rem;
    }
    text {
      width: 100%;
      display: block;
      margin-top: 5rpx;
      font-size: 0.8rem;
    }
  }
  .swiper {
    width: 100%;
    z-index: 1000;
    top: 0;
    swiper-item {
      width: 100%;
    }
    image {
      width: 100%;
    }
  }
</style>

<template>
  <view>
    <!-- 公告区, 用于置放最新公告,头条新闻,推广消息 -->
    <swiper style="height: {{swiper_height}}px;" class="swiper" indicator-dots="true" autoplay="true" interval="4000" duration="1000">
      <block wx:for="{{notices}}" wx:key="item">
        <swiper-item style="height: {{swiper_height}}px;">
          <image style="height: {{swiper_height}}px;" @tap="noticeTo({{item.id}})" src="{{item.cover}}" class="slide-image" />
        </swiper-item>
      </block>
    </swiper>
    <!-- 功能区 -->
    <view class="func">
      <view class="func-row">
        <repeat for="{{funcs}}" item="item" key="index">
          <mview @mtap.user="to" class="mview" :arg.sync="item">
            <view class="icon-btn" slot="content">
              <view style="background: {{item.bg}};" class="iconfont icon-{{item.icon}}"></view>
              <text>{{item.name}}</text>
            </view>
          </mview>
        </repeat>
      </view>
    </view>
    <!-- 卡片区, 置放通知卡片, 例如: 成绩通知, 课程通知, 自习教室, 考试通知 -->
    <view>
      <schedule-card icon="kechengbiao" title="今日课表" :isShow.sync="todaySchedule" footText="查看完整课表" url="/pages/schedule" noneText="今日无课">
        <block slot="content" wx:for="{{todaySchedule}}" wx:if="{{item.course_name}}" wx:key="{{index}}">
          <view class="card-list">
            <view class="card-left">
              <text class="class-name">{{item.course_name}}</text>
              <text class="class-info">{{item.sessionArr[0]}}~{{item.sessionArr[item.flex-1]}}</text>
            </view>
            <view class="card-right">
              <text>{{item.building}} {{item.classroom}}</text>
            </view>
          </view>
        </block>
      </schedule-card>
      <book-card icon="book" bg="card-library.png" title="我的借阅" :isShow.sync="loan_books" footText="查看所有借阅" url="/pages/library/loan" noneText="无借阅书籍">
        <block slot="content" wx:for="{{loan_books}}" wx:key="{{index}}">
          <view wx:if="{{item.title && index < 3}}" class="card-list">
            <view class="card-left">
              <text class="class-name">{{item.title}}</text>
              <text class="class-info">到期: {{item.due_date}}</text>
            </view>
          </view>
        </block>
      </book-card>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {
    GET
  } from '../util/http'
  import index from '../util/index/index'
  import MView from '../components/mview'
  import Card from '../components/card'
  export default class Index extends wepy.page {
    config = {};
    components = {
      "mview": MView,
      "schedule-card": Card,
      "book-card": Card
    }
    data = {
      notices: [{
        cover: 'http://img02.tooopen.com/images/20150928/tooopen_sy_143912755726.jpg',
        id: 1
      }],
      funcs: index.funcs,
      todaySchedule: [],
      swiper_height: 200,
      loan_books: []
    };
    computed = {
      verify() {
        return wepy.getStorageSync('verify')
      }
    }
    navigate(item) {
      let url = item.url
      if (item.type == 'login' && this.verify == 0) {
        wepy.showModal({
          title: '账号信息错误',
          content: '教务处账号未绑定或密码错误！是否前往绑定？',
          success: function(res) {
            if (res.confirm) {
              wepy.navigateTo({
                url: 'bind'
              })
            }
          }
        })
        return
      }
      wepy.navigateTo({
        url: url
      })
    }
    methods = {
      noticeTo(id) {
        wepy.navigateTo({
          url: `details?id=${id}&&from=notice`
        })
      },
      to(item) {
        console.log("aaa", item)
        this.navigate(item)
      }
    };
    getTodaySchedules() {
      let schedules = wepy.getStorageSync('schedules')
      if (!schedules) {
        return
      }
      let today = new Date().getDay() || 7
      schedules[today].forEach(e => {
        if (e.course_name) {
          this.todaySchedule.push(e)
        }
      })
    }
    getNotice() {
      let self = this
      GET('/notices').then(resp => {
        if (resp.status === 0) {
          self.notices = resp.data
          self.$apply()
        } else {
          wepy.showModal({
            title: '数据获取失败！',
            content: resp.msg
          })
        }
      })
    }
    onLoad() {
      // 设置swipe高度 2:1
      this.swiper_height = wepy.getSystemInfoSync().windowWidth / 2
      this.getNotice()
      this.getTodaySchedules()
      this.loan_books = wepy.getStorageSync('loan_now')
    }
    onShareAppMessage(options) {
      return {}
    }
  }
</script>
